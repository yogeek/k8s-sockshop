(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{222:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"install-flux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-flux","aria-hidden":"true"}},[t._v("#")]),t._v(" Install Flux")]),t._v(" "),a("p",[t._v("Flux Architecture:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/fluxcd/flux/raw/18e5174581f44ed8c9a881dd5071179eed1ebf4d/docs/_files/flux-cd-diagram.png",alt:"Flux Architecture",title:"Flux Architecture"}})]),t._v(" "),a("p",[t._v("Create git repository which will be used by Flux in GitHub:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("hub create -d "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Flux repository for k8s-sockshop"')]),t._v(" -h "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ruzickap.github.io/k8s-sockshop/"')]),t._v(" ruzickap/k8s-flux-repository\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("A git remote named 'origin' already exists and is set to push to 'ssh://git@github.com/ruzickap/k8s-sockshop.git'.\nhttps://github.com/ruzickap/k8s-flux-repository\n")])])]),a("p",[t._v("Clone the git repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" tmp\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^github.com "')]),t._v(" ~/.ssh/known_hosts"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" ssh-keyscan github.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.ssh/known_hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"petr.ruzicka@gmail.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp clone git@github.com:ruzickap/k8s-flux-repository.git\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Cloning into 'k8s-flux-repository'...\nwarning: You appear to have cloned an empty repository.\n")])])]),a("p",[t._v("Create initial Flux repository structure and add it into the git repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -v files/flux-repository/README.md tmp/k8s-flux-repository/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -v tmp/k8s-flux-repository/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("namespaces,releases,workloads"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository push -q\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("'files/flux-repository/README.md' -> 'tmp/k8s-flux-repository/README.md'\nmkdir: created directory 'tmp/k8s-flux-repository/namespaces'\nmkdir: created directory 'tmp/k8s-flux-repository/releases'\nmkdir: created directory 'tmp/k8s-flux-repository/workloads'\n[master (root-commit) 01ec748] Initial commit\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\n")])])]),a("p",[t._v("Install "),a("a",{attrs:{href:"https://docs.fluxcd.io/en/stable/references/fluxctl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("fluxctl"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -x /usr/local/bin/fluxctl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L https://github.com/fluxcd/flux/releases/download/1.14.2/fluxctl_linux_amd64 -o /usr/local/bin/fluxctl\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" a+x /usr/local/bin/fluxctl\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("Set the namespace ("),a("code",[t._v("flux")]),t._v(") where flux was installed for running "),a("code",[t._v("fluxctl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FLUX_FORWARD_NAMESPACE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flux"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FLUX_TIMEOUT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30m0s"')]),t._v("\n")])])]),a("p",[t._v("Obtain the ssh public key through "),a("code",[t._v("fluxctl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("fluxctl identity\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -x /usr/bin/chromium-browser "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" chromium-browser https://github.com/ruzickap/k8s-flux-repository/settings/keys/new "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyGvcJPcFxvsc9SHtJiOt7G6pvNQgmcf+PIIfy6PoEvXK2naXmKw68+dtKeIoMzvp63QxoNB+B6qamMbkWqaVCjS4glAXKmf68k/eCazcPNZaQRmL/YUmgmyZ8AF02fDmM/RQMz/2hUtUE6UYs/T5vYUdDwYb09nOmVMgclY6jbmQ4b0OgG18p6RnNYtJ4wysC6+wEoy5xVljKWRE03UxD3pJbVdk5KPcJ/mnX44tUwU/oE/Ezz7LaMjVXnXns8zKu3LOAIeolcCFVJUbUMQhOuvwrXp+Sag1VV3OG4Uy6P3/0wIajEumzHO4GvpAEJ1F1Ny4b692wP/TdUX/WWAIr\n")])])]),a("p",[t._v('Add the ssh key to the GitHub "'),a("a",{attrs:{href:"https://github.com/ruzickap/k8s-flux-repository",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ruzickap/k8s-flux-repository"),a("OutboundLink")],1),t._v('"\n-> "Settings" -> "Deploy keys" -> "Add new" -> "Allow write access"')]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/fluxcd/flux/18e5174581f44ed8c9a881dd5071179eed1ebf4d/docs/_files/flux.svg?sanitize=true",alt:"Flux logo",title:"Flux logo"}})]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"build-container-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-container-image","aria-hidden":"true"}},[t._v("#")]),t._v(" Build container image")]),t._v(" "),a("p",[t._v("Fork the "),a("code",[t._v("front-end")]),t._v(" repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("hub -C tmp clone microservices-demo/front-end\nhub -C tmp/front-end fork\n")])])]),a("p",[t._v("Prepare Tekton pipelines:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("envsubst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" files/flux-repository/workloads/tekton-pipelineresource.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tmp/k8s-flux-repository/workloads/tekton-pipelineresource.yaml\nenvsubst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" files/flux-repository/workloads/tekton-task-pipeline.yaml    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tmp/k8s-flux-repository/workloads/tekton-task-pipeline.yaml\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --verbose "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Add pipelines and pipelineresources"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository push -q\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Initiate "),a("code",[t._v("PipelineRun")]),t._v(" which builds container image form git repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("envsubst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" files/flux-repository/workloads/tekton-pipelinerun.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tmp/k8s-flux-repository/workloads/tekton-pipelinerun.yaml\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --verbose "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Add pipeline and initiate build process"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C tmp/k8s-flux-repository push -q\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Check if the build of docker image was completed:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("kubectl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v(" --timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("30m --for"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Succeeded pipelineruns/podinfo-build-docker-image-from-git-pipelinerun\nkubectl get pipelineruns podinfo-build-docker-image-from-git-pipelinerun\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("NAME                                              SUCCEEDED   REASON      STARTTIME   COMPLETIONTIME\npodinfo-build-docker-image-from-git-pipelinerun   True        Succeeded   7m48s       2m30s\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);